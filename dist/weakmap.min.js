/**
 * map-polyfill - A Map polyfill written in TypeScript, unit tested using Jasmine and Karma.
 *
 * @author Brenden Palmer
 * @version v0.0.1
 * @license MIT
 */
!function(){"use strict";var t;!function(t){var n=function(){function t(){}return Object.defineProperty(t,"MAP_KEY_IDENTIFIER",{get:function(){return"MAP_KEY_IDENTIFIER_OZAbzyeCu3_spF91dwX14"},enumerable:!0,configurable:!0}),Object.defineProperty(t,"MAP_SET_THROWABLE_MESSAGE",{get:function(){return"Invalid value used as map key"},enumerable:!0,configurable:!0}),t}();t.MapConstants=n}(t||(t={}));var t;!function(t){var n=function(){function t(){if(null!==t.instance)throw"Get the instance of the MapSequencer using the getInstance method.";this.identifier=0}return t.getInstance=function(){return null===t.instance&&(t.instance=new t),t.instance},t.prototype.next=function(){return this.identifier++},t.instance=null,t}();t.MapSequencer=n}(t||(t={}));var t;!function(t){var n=function(){function n(){}return n.defineProperty=function(e){var r;if(n.isValidObject(e)===!1)throw new TypeError(t.MapConstants.MAP_SET_THROWABLE_MESSAGE);if("undefined"==typeof e[t.MapConstants.MAP_KEY_IDENTIFIER]){r=t.MapSequencer.getInstance().next();try{Object.defineProperty(e,t.MapConstants.MAP_KEY_IDENTIFIER,{enumerable:!1,configurable:!1,get:function(){return r}})}catch(i){throw new TypeError(t.MapConstants.MAP_SET_THROWABLE_MESSAGE)}}else r=e[t.MapConstants.MAP_KEY_IDENTIFIER];return r},n.getProperty=function(e){return n.isValidObject(e)===!0?e[t.MapConstants.MAP_KEY_IDENTIFIER]:void 0},n.isValidObject=function(t){return t===Object(t)},n}();t.MapUtils=n}(t||(t={}));var t;!function(t){var n=function(){function n(t){void 0===t&&(t=[]),this.map={};for(var n=0;n<t.length;n++){var e=t[n];e&&e.length>=2&&this.set(e[0],e[1])}}return n.prototype.get=function(n){if(this.has(n)===!0){var e=String(t.MapUtils.getProperty(n));return this.map[e]}},n.prototype.has=function(n){var e=String(t.MapUtils.getProperty(n));return void 0!==e&&"undefined"!=typeof this.map[e]},n.prototype["delete"]=function(n){if(this.has(n)===!0){var e=String(t.MapUtils.getProperty(n));return delete this.map[e],!0}return!1},n.prototype.set=function(n,e){var r=String(t.MapUtils.defineProperty(n));this.map[r]=e},n}();t.Map=n}(t||(t={}));var t;!function(t){window.Map||(window.Map=t.Map)}(t||(t={}))}();